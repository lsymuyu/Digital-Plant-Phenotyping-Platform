
# This file has been generated at Thu Nov 05 19:27:16 2009

from openalea.core import *


__name__ = 'adel.adelMons'

__editable__ = True
__description__ = 'Tools for simulations with adel maize'
__license__ = ''
__url__ = ''
__alias__ = []
__version__ = '1.0'
__authors__ = 'Gaetan Louarn'
__institutes__ = 'INRA'
__icon__ = ''


__all__ = ['spitters_journalier_spitters_journalier', 'write_groud_cover_write_groud_cover', 'adel_sim_exp_adel_sim_exp', 'write_graphtalPars_write_graphtalPars', '_104476464', 'render_pov_render_pov', 'write_dict_write_dict', 'can2pov_can2pov', 'ls_sim_ls_sim', 'clean_can_clean_can', 'loc_pov_cam_loc_pov_cam', '_104476624', 'groupOutput_mais_groupOutput_mais', 'visu_can_visu_can', 'ground_cover_ground_cover', 'compute_sen_compute_sen', '_104673328']



spitters_journalier_spitters_journalier = Factory(name='spitters_journalier',
                description='calcul Rdiffus_Rg journalier',
                category='light',
                nodemodule='adel.adelMons.spitters_journalier',
                nodeclass='spitters_journalier',
                inputs=[{'interface': IFloat, 'name': 'Rg', 'value': None, 'desc': ''}, {'interface': IInt, 'name': 'DOY', 'value': None, 'desc': ''}, {'interface': IFloat, 'name': 'Latitude', 'value': None, 'desc': ''}],
                outputs=[{'interface': IFloat, 'name': 'Rd_Rg', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




write_groud_cover_write_groud_cover = Factory(name='write_groud_cover',
                description='write ground cover results',
                category='Unclassified',
                nodemodule='adel.adelMons.write_groud_cover',
                nodeclass='write_groud_cover',
                inputs=[{'interface': ISequence, 'name': 'table ground cover', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'file name', 'value': None, 'desc': ''}],
                outputs=[{'interface': IFileStr, 'name': 'file path', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




adel_sim_exp_adel_sim_exp = Factory(name='adel_sim_exp',
                description='wrapper for adelsimexp2.lsys L-system (graphtal) - return can opt and 8 files ',
                category='Unclassified',
                nodemodule='adel.adelMons.adel_sim_exp',
                nodeclass='adel_sim_exp',
                inputs=[{'interface': IFileStr, 'name': 'parameter file', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'L-system', 'value': 'adelsimexp2.lsys', 'desc': ''}, {'interface': IInt, 'name': 'TT', 'value': 500, 'desc': ''}, {'interface': IStr, 'name': 'can file name', 'value': 'bid.can', 'desc': ''}],
                outputs=[{'interface': IFileStr, 'name': 'can file', 'desc': ''}, {'interface': IFileStr, 'name': '8 file', 'desc': ''}, {'interface': IFileStr, 'name': 'opt file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




write_graphtalPars_write_graphtalPars = Factory(name='write_graphtalPars',
                description='write a .h input file for adelSimexp from excel files',
                category='file',
                nodemodule='adel.adelMons.write_graphtalPars',
                nodeclass='write_graphtalPars',
                inputs=[{'interface': IStr, 'name': 'geno', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'semis', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'phytomer morpho file', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'development file', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'senescence file', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'prevot curvature file', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'prevot shape file', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'plan', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'h file name', 'value': None, 'desc': ''}],
                outputs=[{'interface': IFileStr, 'name': 'graphtal parameter file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_104476464 = CompositeNodeFactory(name='batch_adel',
                             description='batch simulation of adelSimexp using list of parameters',
                             category='Modelling',
                             doc='',
                             inputs=[  {  'desc': '',
      'interface': ISequence,
      'name': 'list of parameter files',
      'value': None},
   {'desc': '', 'interface': IStr, 'name': 'L-system', 'value': None},
   {'desc': '', 'interface': ISequence, 'name': 'list of TT', 'value': None},
   {  'desc': '',
      'interface': ISequence,
      'name': 'list of can names',
      'value': None}],
                             outputs=[  {'desc': '', 'interface': ISequence, 'name': 'can files list'},
   {'desc': '', 'interface': None, 'name': '8 file'},
   {'desc': '', 'interface': None, 'name': 'opt file'}],
                             elt_factory={  5: ('adel.adelMons', 'clean_can'),
   6: ('openalea.flow control', 'X'),
   7: ('openalea.python method', 'len'),
   8: ('openalea.python method', 'range'),
   9: ('openalea.function operator', 'map'),
   10: ('adel.adelMons', 'adel_sim_exp'),
   11: ('openalea.python method', 'getitem'),
   12: ('openalea.python method', 'getitem'),
   13: ('openalea.python method', 'getitem')},
                             elt_connections={  27864740: (11, 0, 10, 0),
   27864752: (6, 0, 11, 1),
   27864764: ('__in__', 0, 11, 0),
   27864776: (13, 0, 10, 3),
   27864788: (10, 2, '__out__', 2),
   27864800: ('__in__', 0, 7, 0),
   27864812: (10, 0, 5, 0),
   27864824: (8, 0, 9, 1),
   27864860: (7, 0, 8, 1),
   27864872: (9, 0, '__out__', 0),
   27864884: (10, 1, '__out__', 1),
   27864896: ('__in__', 1, 10, 1),
   27864908: (5, 0, 9, 0),
   27864932: ('__in__', 3, 13, 0),
   27864944: (6, 0, 13, 1),
   27864956: (6, 0, 12, 1),
   27864968: ('__in__', 2, 12, 0),
   27864980: (12, 0, 10, 2)},
                             elt_data={  5: {  'block': False,
         'caption': 'clean_can',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 88.75,
         'posy': 425.0,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': 'X4',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': 402.5,
         'posy': 21.25,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': 'len',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': -107.5,
         'posy': 192.5,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': 'range',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': -125.0,
         'posy': 362.5,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': 'map',
         'hide': True,
         'lazy': True,
         'minimal': False,
         'port_hide_changed': set([]),
         'posx': 127.5,
         'posy': 563.75,
         'priority': 0,
         'user_application': None},
   10: {  'block': False,
          'caption': 'adel_sim_exp',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set([]),
          'posx': 176.25,
          'posy': 348.75,
          'priority': 0,
          'user_application': None},
   11: {  'block': False,
          'caption': 'getitem',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set([]),
          'posx': 70.0,
          'posy': 226.25,
          'priority': 0,
          'user_application': None},
   12: {  'block': False,
          'caption': 'getitem',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set([]),
          'posx': 225.0,
          'posy': 226.25,
          'priority': 0,
          'user_application': None},
   13: {  'block': False,
          'caption': 'getitem',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set([]),
          'posx': 346.25,
          'posy': 228.75,
          'priority': 0,
          'user_application': None},
   '__in__': {  'caption': 'In',
                'hide': True,
                'lazy': True,
                'minimal': False,
                'port_hide_changed': set([]),
                'posx': 138.75,
                'posy': 63.75,
                'priority': 0},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 235.0,
                 'posy': 626.25,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  5: [(1, '0.5'), (2, '10.0')],
   6: [(0, "'x'")],
   7: [],
   8: [(0, '0'), (2, '1')],
   9: [],
   10: [(0, 'None'), (2, '500'), (3, "'bid.can'")],
   11: [],
   12: [],
   13: [],
   '__in__': [],
   '__out__': []},
                             lazy=True,
                             )




render_pov_render_pov = Factory(name='render_pov',
                description='render a pov file and generates a bmp file',
                category='Vizualisation',
                nodemodule='adel.adelMons.render_pov',
                nodeclass='render_pov',
                inputs=[{'interface': IFileStr, 'name': 'pov file', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'pov directory', 'value': 'C:\\Program Files\\POV-Ray for Windows v3.6\\bin', 'desc': ''}, {'interface': IInt, 'name': 'wait', 'value': 0, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'bmp file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




write_dict_write_dict = Factory(name='write_dict',
                description='',
                category='data',
                nodemodule='adel.adelMons.write_dict',
                nodeclass='write_dict',
                inputs=[{'interface': IDict, 'name': 'dict', 'value': None, 'desc': ''}, {'interface': IDirStr, 'name': 'directory', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'name', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'csv_file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




can2pov_can2pov = Factory(name='can2pov',
                description='converts can file into pov file using geom viewer',
                category='file',
                nodemodule='adel.adelMons.can2pov',
                nodeclass='can2pov',
                inputs=[{'interface': IFileStr, 'name': 'can file', 'value': None, 'desc': ''}, {'interface': IEnumStr(enum=['perspective', 'orthographic', 'fisheye']), 'name': 'camera type', 'value': 'perspective', 'desc': ''}, {'interface': ISequence, 'name': 'background color', 'value': [0, 0, 0], 'desc': ''}, {'interface': IBool, 'name': 'soil', 'value': True, 'desc': ''}, {'interface': ISequence, 'name': 'camera position', 'value': [4.7599999999999998, -1.2, -0.050000000000000003], 'desc': ''}, {'interface': IFloat, 'name': 'field of vue', 'value': 45, 'desc': ''}, {'interface': ISequence, 'name': 'camera rotation', 'value': [0, -16, -89], 'desc': ''}],
                outputs=[{'interface': IFileStr, 'name': 'pov file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




ls_sim_ls_sim = Factory(name='ls_sim',
                description='gets the lists of argument to pass for batch runs with adelsimexp.lsys',
                category='Unclassified',
                nodemodule='adel.adelMons.ls_sim',
                nodeclass='ls_sim',
                inputs=[{'interface': IFileStr, 'name': 'ls_sim file', 'value': None, 'desc': ''}],
                outputs=[{'interface': ISequence, 'name': 'list of parameter files', 'desc': ''}, {'interface': ISequence, 'name': 'TTs', 'desc': ''}, {'interface': ISequence, 'name': 'list of can files', 'desc': ''}, {'interface': ISequence, 'name': 'fov', 'desc': ''}, {'interface': ISequence, 'name': 'height', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




clean_can_clean_can = Factory(name='clean_can',
                description="remove abnormal triangles genetared in graphtal by the 'atan' bug",
                category='Unclassified',
                nodemodule='adel.adelMons.clean_can',
                nodeclass='clean_can',
                inputs=[{'interface': IFileStr, 'name': 'can file', 'value': None, 'desc': ''}, {'interface': IFloat, 'name': 'max area', 'value': 0.5, 'desc': ''}, {'interface': IFloat, 'name': 'max height', 'value': 10.0, 'desc': ''}],
                outputs=[{'interface': IFileStr, 'name': 'can file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




loc_pov_cam_loc_pov_cam = Factory(name='loc_pov_cam',
                description='define camera position from stand caracteristics',
                category='Unclassified',
                nodemodule='adel.adelMons.loc_pov_cam',
                nodeclass='loc_pov_cam',
                inputs=[{'interface': IFloat, 'name': 'num_rang', 'value': 2, 'desc': ''}, {'interface': IFloat, 'name': 'num_plante', 'value': 10, 'desc': ''}, {'interface': IFloat, 'name': 'interrang', 'value': 0.80000000000000004, 'desc': ''}, {'interface': IFloat, 'name': 'interplante', 'value': 0.125, 'desc': ''}, {'interface': IFloat, 'name': 'z_camera', 'value': 2.0, 'desc': ''}],
                outputs=[{'interface': ISequence, 'name': 'pas', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_104476624 = CompositeNodeFactory(name='ls_cam',
                             description='generates a list of n camera positions',
                             category='Unclassified',
                             doc='',
                             inputs=[  {'desc': '', 'interface': None, 'name': 'Z camera', 'value': None},
   {'desc': '', 'interface': None, 'name': 'Nr rows', 'value': None}],
                             outputs=[{'desc': '', 'interface': ISequence, 'name': 'ls cam position'}],
                             elt_factory={  2: ('openalea.functional', 'map'),
   3: ('openalea.python', 'range'),
   4: ('system', 'X'),
   5: ('adel.adelMons', 'loc_pov_cam')},
                             elt_connections={  9787976: ('__in__', 1, 3, 1),
   9787988: (5, 0, 2, 0),
   9788000: (3, 0, 2, 1),
   9788012: (4, 0, 5, 0),
   9788024: (2, 0, '__out__', 0),
   9788036: ('__in__', 0, 5, 4)},
                             elt_data={  2: {  'block': False,
         'caption': 'map',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 270.0,
         'posy': 368.75,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'range',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 496.25,
         'posy': 233.75,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'X0',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 193.75,
         'posy': 117.5,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'loc_pov_cam',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 226.25,
         'posy': 237.5,
         'priority': 0,
         'user_application': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 253.75,
                'posy': 37.5,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 273.75,
                 'posy': 453.75,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [],
   3: [(0, '0'), (2, '1')],
   4: [(0, "'x'")],
   5: [(1, '7.0'), (2, '0.80000000000000004'), (3, '0.125')],
   '__in__': [],
   '__out__': []},
                             lazy=True,
                             )




groupOutput_mais_groupOutput_mais = Factory(name='groupOutput_mais',
                description='group caribu output for each organ based on can id',
                category='data',
                nodemodule='adel.adelMons.groupOutput_mais',
                nodeclass='groupOutput_mais',
                inputs=[{'interface': IDict, 'name': 'caribu dict', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'key', 'value': 'Eabs', 'desc': ''}, {'interface': IBool, 'name': 'sum', 'value': False, 'desc': ''}],
                outputs=[{'interface': ISequence, 'name': 'output vector', 'desc': ''}, {'interface': IDict, 'name': 'output dict', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




visu_can_visu_can = Factory(name='visu_sen',
                description='can file visualisation with senescence',
                category='',
                nodemodule='adel.adelMons.visu_can',
                nodeclass='visu_can',
                inputs=[{'interface': None, 'name': 'can file', 'value': None, 'desc': ''}],
                outputs=[],
                widgetmodule=None,
                widgetclass=None,
               )




ground_cover_ground_cover = Factory(name='ground_cover',
                description='compute groud cover from bmp files generated by pov-ray - takes into account the camera position and fov',
                category='Image',
                nodemodule='adel.adelMons.ground_cover',
                nodeclass='ground_cover',
                inputs=[{'interface': IFileStr, 'name': 'image file', 'value': None, 'desc': ''}, {'interface': ISequence, 'name': 'camera position', 'value': None, 'desc': ''}, {'interface': IFloat, 'name': 'fov', 'value': None, 'desc': ''}, {'interface': IInt, 'name': 'thresholding G-B', 'value': 50, 'desc': ''}, {'interface': IInt, 'name': 'thresholding G-R', 'value': 12, 'desc': ''}],
                outputs=[{'interface': ISequence, 'name': 'groud cover', 'desc': ''}, {'interface': IFileStr, 'name': 'tresholded image', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




compute_sen_compute_sen = Factory(name='compute_sen',
                description='compute maise senecence and change caribu ids in can file',
                category='modelling',
                nodemodule='adel.adelMons.compute_sen',
                nodeclass='compute_sen',
                inputs=[{'interface': IFileStr, 'name': 'can file', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'parameter file', 'value': None, 'desc': ''}, {'interface': IFloat, 'name': 'TT', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'can file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




_104673328 = CompositeNodeFactory(name='batch_ground_cover',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[  {'desc': '', 'interface': None, 'name': 'can file', 'value': None},
   {'desc': '', 'interface': None, 'name': 'fov', 'value': None},
   {'desc': '', 'interface': None, 'name': 'Z camera', 'value': None},
   {'desc': '', 'interface': None, 'name': 'wait', 'value': None}],
                             outputs=[{'desc': '', 'interface': ISequence, 'name': 'ls ground cover'}],
                             elt_factory={  2: ('openalea.functional', 'map'),
   3: ('openalea.python', 'range'),
   4: ('adel.adelMons', 'can2pov'),
   5: ('adel.adelMons', 'render_pov'),
   6: ('adel.adelMons', 'ground_cover'),
   7: ('openalea.data structure', 'int'),
   8: ('adel.adelMons', 'ls_cam'),
   9: ('openalea.python', 'getitem'),
   12: ('system', 'X')},
                             elt_connections={  10901976: (12, 0, 9, 1),
   10901988: (9, 0, 4, 4),
   10902000: (5, 0, 6, 0),
   10902012: ('__in__', 3, 5, 2),
   10902024: (4, 0, 5, 0),
   10902036: (7, 0, 3, 1),
   10902048: (8, 0, 9, 0),
   10902060: (2, 0, '__out__', 0),
   10902072: (7, 0, 8, 1),
   10902084: ('__in__', 1, 4, 5),
   10902096: ('__in__', 1, 6, 2),
   10902108: (3, 0, 2, 1),
   10902120: (6, 0, 2, 0),
   10902132: ('__in__', 0, 4, 0),
   10902144: (9, 0, 6, 1),
   10902156: ('__in__', 2, 8, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'map',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 505.16597155828975,
         'posy': 529.22149401344632,
         'priority': 0,
         'user_application': None},
   3: {  'block': False,
         'caption': 'range',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 725.27400202297304,
         'posy': 392.10501601905344,
         'priority': 0,
         'user_application': None},
   4: {  'block': False,
         'caption': 'can2pov',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 195.73626833800591,
         'posy': 237.28319431165792,
         'priority': 0,
         'user_application': None},
   5: {  'block': False,
         'caption': 'render_pov',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': 267.71394019450724,
         'posy': 369.47767185650127,
         'priority': 0,
         'user_application': None},
   6: {  'block': False,
         'caption': 'ground_cover',
         'hide': True,
         'lazy': False,
         'port_hide_changed': set([]),
         'posx': 346.46394019450724,
         'posy': 468.22767185650127,
         'priority': 0,
         'user_application': None},
   7: {  'block': False,
         'caption': '4',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 733.569700972536,
         'posy': 29.338865718609711,
         'priority': 0,
         'user_application': None},
   8: {  'block': False,
         'caption': 'ls_cam',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 605.68904446076385,
         'posy': 98.819403068945775,
         'priority': 0,
         'user_application': None},
   9: {  'block': False,
         'caption': 'getitem',
         'hide': True,
         'lazy': True,
         'port_hide_changed': set([]),
         'posx': 612.90283570347583,
         'posy': 208.63050755997716,
         'priority': 0,
         'user_application': None},
   12: {  'block': False,
          'caption': 'X2',
          'hide': True,
          'lazy': True,
          'port_hide_changed': set([]),
          'posx': 817.88776347532621,
          'posy': 131.10259738060373,
          'priority': 0,
          'user_application': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'hide': True,
                'lazy': True,
                'port_hide_changed': set([]),
                'posx': 383.23838907286552,
                'posy': 7.4055522455156648,
                'priority': 0,
                'user_application': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'hide': True,
                 'lazy': True,
                 'port_hide_changed': set([]),
                 'posx': 510.73265808519574,
                 'posy': 585.57453824943514,
                 'priority': 0,
                 'user_application': None}},
                             elt_value={  2: [],
   3: [(0, '0'), (2, '1')],
   4: [  (1, "'perspective'"),
         (2, '[1, 0, 0]'),
         (3, 'False'),
         (6, '[0, -90, 90]')],
   5: [(1, "'C:\\\\Program Files\\\\POV-Ray for Windows v3.6\\\\bin'")],
   6: [(3, '50'), (4, '12')],
   7: [(0, '4')],
   8: [],
   9: [],
   12: [(0, "'x'")],
   '__in__': [],
   '__out__': []},
                             lazy=True,
                             )




